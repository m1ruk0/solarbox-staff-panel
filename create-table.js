require('dotenv').config();
const { google } = require('googleapis');

async function createTable() {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    const credentials = JSON.parse(process.env.GOOGLE_CREDENTIALS);
    const auth = new google.auth.GoogleAuth({
      credentials,
      scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });

    const sheets = google.sheets({ version: 'v4', auth });
    const spreadsheetId = process.env.GOOGLE_SHEET_ID;

    console.log('üìä –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É "–ü–µ—Ä—Å–æ–Ω–∞–ª"...');

    // –°–æ–∑–¥–∞—ë–º –ª–∏—Å—Ç "–ü–µ—Ä—Å–æ–Ω–∞–ª"
    try {
      await sheets.spreadsheets.batchUpdate({
        spreadsheetId,
        resource: {
          requests: [{
            addSheet: {
              properties: {
                title: '–ü–µ—Ä—Å–æ–Ω–∞–ª',
                gridProperties: {
                  rowCount: 1000,
                  columnCount: 7
                },
                tabColor: {
                  red: 0.29,
                  green: 0.53,
                  blue: 0.91
                }
              }
            }
          }]
        }
      });
      console.log('‚úÖ –õ–∏—Å—Ç "–ü–µ—Ä—Å–æ–Ω–∞–ª" —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      if (error.message.includes('already exists')) {
        console.log('‚ö†Ô∏è –õ–∏—Å—Ç "–ü–µ—Ä—Å–æ–Ω–∞–ª" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      } else {
        throw error;
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    await sheets.spreadsheets.values.update({
      spreadsheetId,
      range: '–ü–µ—Ä—Å–æ–Ω–∞–ª!A1:G1',
      valueInputOption: 'RAW',
      resource: {
        values: [['Discord', 'Minecraft', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–í–∞—Ä–Ω—ã', '–î–∞—Ç–∞ –Ω–∞–π–º–∞', '–°—Ç–∞—Ç—É—Å', '–û—Ç–ø—É—Å–∫']]
      }
    });
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');

    // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö
    await sheets.spreadsheets.values.update({
      spreadsheetId,
      range: '–ü–µ—Ä—Å–æ–Ω–∞–ª!A2:G4',
      valueInputOption: 'USER_ENTERED',
      resource: {
        values: [
          ['username', 'Steve123', 'HELPER', 0, '20.10.2025', '–ê–∫—Ç–∏–≤–µ–Ω', '–ù–µ—Ç'],
          ['user2', 'Alex456', 'MODER', 1, '15.10.2025', '–ê–∫—Ç–∏–≤–µ–Ω', '–î–∞'],
          ['user3', 'Notch789', 'CT.HELPER', 2, '10.10.2025', '–ß–°–ü', '–ù–µ—Ç']
        ]
      }
    });
    console.log('‚úÖ –ü—Ä–∏–º–µ—Ä—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ–±–∞–≤–ª–µ–Ω—ã');

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    await sheets.spreadsheets.batchUpdate({
      spreadsheetId,
      resource: {
        requests: [
          {
            repeatCell: {
              range: {
                sheetId: 0,
                startRowIndex: 0,
                endRowIndex: 1,
                startColumnIndex: 0,
                endColumnIndex: 7
              },
              cell: {
                userEnteredFormat: {
                  backgroundColor: { red: 0.1, green: 0.45, blue: 0.91 },
                  textFormat: {
                    foregroundColor: { red: 1, green: 1, blue: 1 },
                    fontSize: 12,
                    bold: true
                  },
                  horizontalAlignment: 'CENTER',
                  verticalAlignment: 'MIDDLE'
                }
              },
              fields: 'userEnteredFormat(backgroundColor,textFormat,horizontalAlignment,verticalAlignment)'
            }
          }
        ]
      }
    });
    console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');

    console.log('\nüéâ –¢–∞–±–ª–∏—Ü–∞ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    console.log('üîó –û—Ç–∫—Ä–æ–π—Ç–µ: https://docs.google.com/spreadsheets/d/' + spreadsheetId);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

createTable();
