require('dotenv').config();
const { google } = require('googleapis');

async function createApplicationsTable() {
  try {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    const credentials = JSON.parse(process.env.GOOGLE_CREDENTIALS);
    const auth = new google.auth.GoogleAuth({
      credentials,
      scopes: ['https://www.googleapis.com/auth/spreadsheets'],
    });

    const sheets = google.sheets({ version: 'v4', auth });
    const spreadsheetId = process.env.GOOGLE_SHEET_ID;

    console.log('üìã –°–æ–∑–¥–∞—é —Ç–∞–±–ª–∏—Ü—É "–ó–∞—è–≤–∫–∏"...');

    // –°–æ–∑–¥–∞—ë–º –ª–∏—Å—Ç "–ó–∞—è–≤–∫–∏"
    try {
      await sheets.spreadsheets.batchUpdate({
        spreadsheetId,
        resource: {
          requests: [{
            addSheet: {
              properties: {
                title: '–ó–∞—è–≤–∫–∏',
                gridProperties: {
                  rowCount: 1000,
                  columnCount: 9
                },
                tabColor: {
                  red: 0.91,
                  green: 0.53,
                  blue: 0.29
                }
              }
            }
          }]
        }
      });
      console.log('‚úÖ –õ–∏—Å—Ç "–ó–∞—è–≤–∫–∏" —Å–æ–∑–¥–∞–Ω');
    } catch (error) {
      if (error.message.includes('already exists')) {
        console.log('‚ö†Ô∏è –õ–∏—Å—Ç "–ó–∞—è–≤–∫–∏" —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
      } else {
        throw error;
      }
    }

    // –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏
    await sheets.spreadsheets.values.update({
      spreadsheetId,
      range: '–ó–∞—è–≤–∫–∏!A1:I1',
      valueInputOption: 'RAW',
      resource: {
        values: [['Discord', 'Minecraft', '–í–æ–∑—Ä–∞—Å—Ç', '–û–ø—ã—Ç', '–ü–æ—á–µ–º—É —Ö–æ—á–µ—Ç', '–î–∞—Ç–∞ –ø–æ–¥–∞—á–∏', '–°—Ç–∞—Ç—É—Å', '–î–æ–ª–∂–Ω–æ—Å—Ç—å', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π']]
      }
    });
    console.log('‚úÖ –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã');

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
    await sheets.spreadsheets.batchUpdate({
      spreadsheetId,
      resource: {
        requests: [
          {
            repeatCell: {
              range: {
                sheetId: 1, // ID –Ω–æ–≤–æ–≥–æ –ª–∏—Å—Ç–∞
                startRowIndex: 0,
                endRowIndex: 1,
                startColumnIndex: 0,
                endColumnIndex: 9
              },
              cell: {
                userEnteredFormat: {
                  backgroundColor: { red: 0.91, green: 0.53, blue: 0.29 },
                  textFormat: {
                    foregroundColor: { red: 1, green: 1, blue: 1 },
                    fontSize: 12,
                    bold: true
                  },
                  horizontalAlignment: 'CENTER',
                  verticalAlignment: 'MIDDLE'
                }
              },
              fields: 'userEnteredFormat(backgroundColor,textFormat,horizontalAlignment,verticalAlignment)'
            }
          }
        ]
      }
    });
    console.log('‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–æ');

    console.log('\nüéâ –¢–∞–±–ª–∏—Ü–∞ –∑–∞—è–≤–æ–∫ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
    console.log('üîó –û—Ç–∫—Ä–æ–π—Ç–µ: https://docs.google.com/spreadsheets/d/' + spreadsheetId);
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

createApplicationsTable();
